FROM ubuntu:16.04

MAINTAINER Omics Academy <omicsacademy2020@gmail.com>

#########################
# Software: trimmomatic
# Software Version: 0.39
# Software Websit: http://www.usadellab.org/cms/?page=trimmomatic
# Description: A flexible read trimming tool for Illumina NGS data
#########################

ENV SW_NAME=Trimmomatic
ENV VERSION=0.39
ENV DEST=/usr/src/$SW_NAME
ENV ADAPTERPATH=$DEST/$VERSION/$SW_NAME-$VERSION/adapters

ADD docker_helper.0.1.0  /usr/bin

RUN apt-get -y update --fix-missing && \
    apt-get install -y zip default-jre \
    build-essential \
    gcc-multilib \
    zlib1g-dev \
    curl \
    wget \
    cmake \
    python \
    python-pip \
    python-dev \
    python2.7-dev \
    python-numpy \
    python-matplotlib \
    python3 \
    python-dev \
    python3-dev \
    python3-pip \
    hdf5-tools \
    libhdf5-dev \
    hdf5-helpers \
    libhdf5-serial-dev \
    libssh2-1-dev \
    libcurl4-openssl-dev \
    icu-devtools \
    libssl-dev \
    libxml2-dev \
    r-bioc-biobase \
    git \
    apt-utils \
    pigz
 
WORKDIR $DEST/$VERSION
RUN wget http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.39.zip -O $SW_NAME-$VERSION.zip && \
	unzip $SW_NAME-$VERSION.zip && \
	echo "alias trimmomatic='java -jar $DEST/$VERSION/$SW_NAME-$VERSION/trimmomatic-0.39.jar'" >> ~/.bash_aliases && \
        echo "source ~/.bash_aliases" >> ~/.bashrc && \
	chmod +x /usr/bin/docker_helper.0.1.0

RUN apt-get install locales
RUN locale-gen en_US.UTF-8
#RUN dpkg-reconfigure locales
RUN update-locale LANG=en_US.UTF-8
RUN rm $SW_NAME-$VERSION.zip

# Install hisat2: HISAT 2.2.1 release 7/24/2020
WORKDIR /docker
RUN curl --output hisat2-2.2.1-Linux_x86_64.zip  -L  https://cloud.biohpc.swmed.edu/index.php/s/4pMgDq4oAF9QCfA/download && \
    unzip hisat2-2.2.1-Linux_x86_64.zip && \
    rm hisat2-2.2.1-Linux_x86_64.zip 
ENV PATH=/docker/hisat2-2.2.1/:${PATH}
#RUN cp -p hisat2-2.2.1/hisat2 hisat2-2.2.1/hisat2-* /usr/bin


# update pip
RUN pip install --upgrade pip
RUN pip3 install --upgrade pip
# install wheel
RUN pip install wheel
RUN pip install jupyterlab==2.2.8
## https://github.com/jupyterlab/jupyterlab-toc
## x means 12 here
RUN curl -sL https://deb.nodesource.com/setup_lts.x | bash -
RUN apt-get install -y nodejs
RUN jupyter labextension install @jupyterlab/toc

# Install hisat2: HISAT 2.2.1 release 7/24/2020
WORKDIR /docker
RUN wget https://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.9.zip && \
    unzip fastqc_v0.11.9.zip && \
    rm fastqc_v0.11.9.zip && \
    mv FastQC/ /usr/bin/ && \
    chmod 777 /usr/bin/FastQC/fastqc
ENV PATH=/usr/bin/FastQC/:${PATH}
#export $PATH:/usr/bin/FastQC/

# Install hisat2: HISAT 2.2.1 release 7/24/2020
WORKDIR /docker
RUN curl -OL http://ccb.jhu.edu/software/stringtie/dl/stringtie-2.1.4.Linux_x86_64.tar.gz
RUN tar zxzf stringtie-2.1.4.Linux_x86_64.tar.gz
RUN rm stringtie-2.1.4.Linux_x86_64.tar.gz
ENV PATH=/docker/stringtie-2.1.4.Linux_x86_64:${PATH}


## Set a default user. Available via runtime flag `--user docker` 
## Add user to 'staff' group, granting them write privileges to /usr/local/lib/R/site.library
## User should also have & own a home directory (for rstudio or linked volumes to work properly). 
RUN useradd --create-home --shell /bin/bash docker \
	#&& mkdir /home/docker \
	&& chown docker:docker /home/docker \
	&& addgroup docker staff
#https://stackoverflow.com/questions/27701930/how-to-add-users-to-docker-container
RUN echo 'docker:docker4bix' | chpasswd

# The add-apt-repository command is not a regular package that can be installed with apt on Debian / Ubuntu LTS 18.04, 16.04, and 14.04. Instead, itâ€™s a component of the software-properties-common package.

RUN apt-get install -y --no-install-recommends  software-properties-common  \
    &&   add-apt-repository --enable-source --yes "ppa:marutter/rrutter4.0" \
        && add-apt-repository --enable-source --yes "ppa:c2d4u.team/c2d4u4.0+"
# Now install R and littler, and create a link for littler in /usr/local/bin
# Default CRAN repo is now set by R itself, and littler knows about it too
# r-cran-docopt is not currently in c2d4u so we install from source
RUN apt-get update \
        && apt-get install -y --no-install-recommends \
                 littler \
 		 r-base \
 		 r-base-dev \
 		 r-recommended \
  	&& ln -s /usr/lib/R/site-library/littler/examples/install.r /usr/local/bin/install.r \
 	&& ln -s /usr/lib/R/site-library/littler/examples/install2.r /usr/local/bin/install2.r \
 	&& ln -s /usr/lib/R/site-library/littler/examples/installGithub.r /usr/local/bin/installGithub.r \
 	&& ln -s /usr/lib/R/site-library/littler/examples/testInstalled.r /usr/local/bin/testInstalled.r \
 	&& install.r docopt \
 	&& rm -rf /tmp/downloaded_packages/ /tmp/*.rds \
 	&& rm -rf /var/lib/apt/lists/*


RUN R -e 'install.packages("devtools")'
RUN R -e 'devtools::install_version("BiocManager", version="1.30.10", repos=c("http://cran.us.r-project.org"),upgrade = "never", force = TRUE)'	
RUN R -e 'devtools::install_version("Biobase", version="2.48.0", repos=c("https://bioconductor.org/packages/3.11/bioc","http://cran.us.r-project.org"),upgrade = "never", force = TRUE)'
RUN R -e 'devtools::install_version("DESeq2", version="1.28.1", repos=c("https://bioconductor.org/packages/3.11/bioc","http://cran.us.r-project.org"),upgrade = "never", force = TRUE)'
RUN R -e 'devtools::install_version("reshape2", version="1.4.4", repos=c("http://cran.us.r-project.org"),upgrade = "never", force = TRUE)'

#RUN R -e 'devtools::install_version("ggplot2", version="3.3.2", repos=c("http://cran.us.r-project.org"),upgrade = "never", force = TRUE)'
RUN R -e 'devtools::install_version("IRkernel", version = "1.1.1", repos = "https://cran.rstudio.com/",upgrade = "never", force = TRUE)'
RUN R -e 'IRkernel::installspec(name = "R-DESeq2", displayname = "R-4.0.2", user = FALSE)'
RUN R -e 'devtools::install_version("EnhancedVolcano", version="1.6.0", repos=c("https://bioconductor.org/packages/3.11/bioc","http://cran.us.r-project.org"),upgrade = "never", force = TRUE)'

#RUN pip install XlsxWriter==1.3.3
#RUN apt-get remove --purge -y $BUILDPKGS && \
#    rm -rf /var/lib/apt/lists/*
USER docker 
WORKDIR /home/docker/
ENTRYPOINT ["/usr/bin/docker_helper.0.1.0"]
